/// <reference types="node" />
import { StorageManager } from "./StorageManager";
export { StorageManager } from "./StorageManager";
export { DirectoryList } from "./DirectoryList";
export declare const constants: typeof import("fs").constants, path: import("path").PlatformPath, put: typeof StorageManager.put, putStreamed: typeof StorageManager.putStreamed, append: typeof StorageManager.append, appendStreamed: typeof StorageManager.appendStreamed, get: typeof StorageManager.get, getAsBuffer: typeof StorageManager.getAsBuffer, getAsBuffers: typeof StorageManager.getAsBuffers, getAsJSON: typeof StorageManager.getAsJSON, rename: typeof StorageManager.rename, move: typeof StorageManager.move, copy: typeof StorageManager.copy, readStream: typeof StorageManager.readStream, writeStream: typeof StorageManager.writeStream, fileStream: typeof StorageManager.fileStream, stream: typeof StorageManager.fileStream, exists: typeof StorageManager.exists, doesntExist: typeof StorageManager.doesntExist, stats: typeof StorageManager.stats, isFile: typeof StorageManager.isFile, isDirectory: typeof StorageManager.isDirectory, listDirectory: typeof StorageManager.listDirectory, mkdir: typeof StorageManager.mkdir, unlink: typeof StorageManager.deleteFromStorage, Delete: typeof StorageManager.deleteFromStorage, deleteFromStorage: typeof StorageManager.deleteFromStorage, checkExist: typeof StorageManager.checkExist, writeFileStream: typeof StorageManager.writeFileStream, writeStorage: typeof StorageManager.writeStorage, readFileStream: typeof StorageManager.readFileStream, readStorage: typeof StorageManager.readStorage, getFileContents: typeof StorageManager.getFileContents, openFileOrDirectory: typeof StorageManager.openFileOrDirectory;
export default StorageManager;
